# Common configuration
RELEASE_COMMON: &RELEASE_COMMON
  chart: jupyterhub/jupyterhub
  version: v0.7-4104389

repositories:
  - name: jupyterhub
    url: https://jupyterhub.github.io/helm-chart/

releases:

  - <<: *RELEASE_COMMON
    name: jupyterhub-staging
    namespace: jupyterhub-staging
    labels:
      deployment: staging
      application: staging
    values:
      - jupyterhub-config.yaml
    set:
      - name: proxy.secretToken
        value: "{{ env \"SECRET_JUPYTERHUB_PROXY_TOKEN\" }}"
      - name: singleuser.extraEnv.IDR_PASSWORD
        value: "{{ env \"SECRET_IDR_PASSWORD\" }}"

  - <<: *RELEASE_COMMON
    name: jupyterhub-public
    namespace: jupyterhub-public
    labels:
      deployment: production
      application: public
    values:
      - jupyterhub-config.yaml
      - jupyterhub-public.yaml
    set:
      - name: proxy.secretToken
        value: "{{ env \"SECRET_JUPYTERHUB_PROXY_TOKEN\" }}"
      - name: singleuser.extraEnv.IDR_PASSWORD
        value: "{{ env \"SECRET_IDR_PASSWORD\" }}"

  - <<: *RELEASE_COMMON
    name: jupyterhub-vae
    namespace: jupyterhub-vae
    labels:
      deployment: production
      application: vae
    values:
      - jupyterhub-config.yaml
      - jupyterhub-vae.yaml
    set:
      - name: proxy.secretToken
        value: "{{ env \"SECRET_JUPYTERHUB_PROXY_TOKEN\" }}"
      - name: singleuser.extraEnv.IDR_PASSWORD
        value: "{{ env \"SECRET_IDR_PASSWORD\" }}"
      - name: auth.github.clientId
        value: "{{ env \"SECRET_GITHUB_CLIENTID\" }}"
      - name: auth.github.clientSecret
        value: "{{ env \"SECRET_GITHUB_CLIENTSECRET\" }}"

  - <<: *RELEASE_COMMON
    name: jupyterhub-vae-aai
    namespace: jupyterhub-vae-aai
    labels:
      deployment: production
      application: vae-aai
    values:
      - jupyterhub-config.yaml
      - jupyterhub-vae-aai.yaml
    set:
      - name: proxy.secretToken
        value: "{{ env \"SECRET_JUPYTERHUB_PROXY_TOKEN\" }}"
      - name: singleuser.extraEnv.IDR_PASSWORD
        value: "{{ env \"SECRET_IDR_PASSWORD\" }}"
      - name: hub.extraEnv.OAUTH_CLIENT_ID
        value: "{{ env \"SECRET_AAI_CLIENTID\" }}"
      - name: hub.extraEnv.OAUTH_CLIENT_SECRET
        value: "{{ env \"SECRET_AAI_CLIENTSECRET\" }}"

  - name: idr-analysis-website
    namespace: idr-analysis-website
    chart: ./charts/idr-analysis-website
    labels:
      deployment: production
      application: website
    set:
      - name: ingress.hosts.0
        value: idr-training.openmicroscopy.org
      - name: image.pullPolicy
        value: Always

  - name: prometheus
    namespace: prometheus
    chart: stable/prometheus
    version: 6.2.1
    labels:
      deployment: production
      application: prometheus
    values:
      - prometheus-public.yaml
    # helmfile --selector application=prometheus sync --args '--wait --timeout=300 --debug --dry-run'

  - name: grafana
    namespace: grafana
    chart: stable/grafana
    version: 1.2.0
    labels:
      deployment: production
      application: grafana
    values:
      - grafana-public.yaml
    # kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo
